{"ast":null,"code":"var _jsxFileName = \"/Users/sreeramranga/Documents/GitHub/gcp_terraform_chatbot/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseBotResponse(response) {\n  // Try to split the response into summary and terraform code\n  const summaryMatch = response.match(/Summary:(.*?)(Terraform:|$)/s);\n  const terraformMatch = response.match(/Terraform:\\s*```hcl([\\s\\S]*?)```/);\n  const summary = summaryMatch ? summaryMatch[1].trim() : null;\n  const terraform = terraformMatch ? terraformMatch[1].trim() : null;\n  return {\n    summary,\n    terraform\n  };\n}\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      sender: 'user',\n      text: input\n    }]);\n    const res = await axios.post('/chat', {\n      message: input,\n      user_id: 'demo'\n    });\n    const {\n      summary,\n      terraform\n    } = parseBotResponse(res.data.response);\n    if (summary || terraform) {\n      setMessages(msgs => [...msgs, {\n        sender: 'bot',\n        summary,\n        terraform,\n        text: res.data.response\n      }]);\n    } else {\n      setMessages(msgs => [...msgs, {\n        sender: 'bot',\n        text: res.data.response\n      }]);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: '40px auto',\n      fontFamily: 'sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"GCP Terraform Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        minHeight: 200,\n        padding: 10,\n        marginBottom: 10\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === 'user' ? 'right' : 'left',\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.sender === 'user' ? 'You' : 'Bot', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), msg.sender === 'bot' && (msg.summary || msg.terraform) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [msg.summary && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '8px 0',\n              color: '#333'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Summary:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 81\n            }, this), \" \", msg.summary]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this), msg.terraform && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '8px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Terraform:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              style: {\n                background: '#f4f4f4',\n                padding: 10,\n                borderRadius: 4,\n                overflowX: 'auto'\n              },\n              children: msg.terraform\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", msg.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && sendMessage(),\n      style: {\n        width: '80%',\n        padding: 8\n      },\n      placeholder: \"Type your command...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: 8,\n        marginLeft: 8\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","parseBotResponse","response","summaryMatch","match","terraformMatch","summary","trim","terraform","App","_s","messages","setMessages","input","setInput","sendMessage","sender","text","res","post","message","user_id","data","msgs","style","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","border","minHeight","padding","marginBottom","map","msg","i","textAlign","color","background","borderRadius","overflowX","value","onChange","e","target","onKeyDown","key","width","placeholder","onClick","marginLeft","_c","$RefreshReg$"],"sources":["/Users/sreeramranga/Documents/GitHub/gcp_terraform_chatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction parseBotResponse(response) {\n  // Try to split the response into summary and terraform code\n  const summaryMatch = response.match(/Summary:(.*?)(Terraform:|$)/s);\n  const terraformMatch = response.match(/Terraform:\\s*```hcl([\\s\\S]*?)```/);\n  const summary = summaryMatch ? summaryMatch[1].trim() : null;\n  const terraform = terraformMatch ? terraformMatch[1].trim() : null;\n  return { summary, terraform };\n}\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    setMessages([...messages, { sender: 'user', text: input }]);\n    const res = await axios.post('/chat', { message: input, user_id: 'demo' });\n    const { summary, terraform } = parseBotResponse(res.data.response);\n    if (summary || terraform) {\n      setMessages(msgs => [\n        ...msgs,\n        { sender: 'bot', summary, terraform, text: res.data.response }\n      ]);\n    } else {\n      setMessages(msgs => [...msgs, { sender: 'bot', text: res.data.response }]);\n    }\n    setInput('');\n  };\n\n  return (\n    <div style={{ maxWidth: 600, margin: '40px auto', fontFamily: 'sans-serif' }}>\n      <h2>GCP Terraform Chatbot</h2>\n      <div style={{ border: '1px solid #ccc', minHeight: 200, padding: 10, marginBottom: 10 }}>\n        {messages.map((msg, i) => (\n          <div key={i} style={{ textAlign: msg.sender === 'user' ? 'right' : 'left', marginBottom: 16 }}>\n            <b>{msg.sender === 'user' ? 'You' : 'Bot'}:</b>\n            {msg.sender === 'bot' && (msg.summary || msg.terraform) ? (\n              <div>\n                {msg.summary && <div style={{ margin: '8px 0', color: '#333' }}><b>Summary:</b> {msg.summary}</div>}\n                {msg.terraform && (\n                  <div style={{ margin: '8px 0' }}>\n                    <b>Terraform:</b>\n                    <pre style={{ background: '#f4f4f4', padding: 10, borderRadius: 4, overflowX: 'auto' }}>{msg.terraform}</pre>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <span> {msg.text}</span>\n            )}\n          </div>\n        ))}\n      </div>\n      <input\n        value={input}\n        onChange={e => setInput(e.target.value)}\n        onKeyDown={e => e.key === 'Enter' && sendMessage()}\n        style={{ width: '80%', padding: 8 }}\n        placeholder=\"Type your command...\"\n      />\n      <button onClick={sendMessage} style={{ padding: 8, marginLeft: 8 }}>Send</button>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}